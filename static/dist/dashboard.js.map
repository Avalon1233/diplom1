{"version":3,"file":"dashboard.js","mappings":"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","sources":["webpack://crypto-analysis-system/webpack/runtime/chunk loaded","webpack://crypto-analysis-system/./src/components/Dashboard/CryptoCard.js","webpack://crypto-analysis-system/./src/components/Dashboard/MarketTable.js","webpack://crypto-analysis-system/./src/components/Dashboard/AlertModal.js","webpack://crypto-analysis-system/./src/components/Common/NotificationContainer.js","webpack://crypto-analysis-system/./src/components/Common/ConnectionStatus.js","webpack://crypto-analysis-system/./src/components/Dashboard/DashboardApp.js","webpack://crypto-analysis-system/./src/components/Dashboard/index.js","webpack://crypto-analysis-system/webpack/bootstrap","webpack://crypto-analysis-system/webpack/runtime/compat get default export","webpack://crypto-analysis-system/webpack/runtime/define property getters","webpack://crypto-analysis-system/webpack/runtime/hasOwnProperty shorthand","webpack://crypto-analysis-system/webpack/runtime/make namespace object","webpack://crypto-analysis-system/webpack/runtime/runtimeId","webpack://crypto-analysis-system/webpack/runtime/jsonp chunk loading","webpack://crypto-analysis-system/webpack/runtime/nonce","webpack://crypto-analysis-system/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst CryptoCard = ({ crypto, onAddToWatchlist, onSetAlert }) => {\n  const isPositive = crypto.change >= 0;\n  const changeClass = isPositive ? 'positive' : 'negative';\n  const cardClass = isPositive ? 'price-up' : 'price-down';\n\n  const getCryptoIcon = (symbol) => {\n    if (symbol.includes('BTC')) return 'bi-currency-bitcoin text-warning';\n    if (symbol.includes('ETH')) return 'bi-ethereum text-info';\n    if (symbol.includes('BNB')) return 'bi-coin text-warning';\n    if (symbol.includes('ADA')) return 'bi-coin text-primary';\n    if (symbol.includes('SOL')) return 'bi-coin text-purple';\n    return 'bi-coin text-secondary';\n  };\n\n  const getCryptoName = (symbol) => {\n    if (symbol.includes('BTC')) return 'Bitcoin';\n    if (symbol.includes('ETH')) return 'Ethereum';\n    if (symbol.includes('BNB')) return 'Binance Coin';\n    if (symbol.includes('ADA')) return 'Cardano';\n    if (symbol.includes('SOL')) return 'Solana';\n    return symbol.split('-')[0];\n  };\n\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 4 : 2\n    }).format(price);\n  };\n\n  const formatChange = (change) => {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${change.toFixed(2)}%`;\n  };\n\n  return (\n    <div className={`card crypto-price-card h-100 shadow-sm border-0 ${cardClass}`}>\n      <div className=\"card-body\">\n        <div className=\"row no-gutters align-items-center\">\n          <div className=\"col mr-2\">\n            <div className=\"d-flex align-items-center mb-2\">\n              <div className=\"crypto-icon me-2\">\n                <i className={`bi ${getCryptoIcon(crypto.symbol)} fs-4`}></i>\n              </div>\n              <div>\n                <div className=\"text-xs font-weight-bold text-uppercase mb-1\">\n                  {crypto.symbol.replace('-', '/')}\n                </div>\n                <small className=\"text-muted\">{getCryptoName(crypto.symbol)}</small>\n              </div>\n            </div>\n            \n            <div className=\"h4 mb-0 font-weight-bold text-gray-800\">\n              {formatPrice(crypto.price)}\n            </div>\n            \n            <div className=\"mt-2\">\n              <span className={`price-change ${changeClass} me-1`}>\n                <i className={`bi ${isPositive ? 'bi-arrow-up' : 'bi-arrow-down'}`}></i>\n                {formatChange(crypto.change)}\n              </span>\n              <small className=\"text-muted\">24ч</small>\n            </div>\n            \n            <div className=\"mt-2\">\n              <small className=\"text-muted\">\n                H: {formatPrice(crypto.high)} L: {formatPrice(crypto.low)}\n              </small>\n            </div>\n          </div>\n          \n          <div className=\"col-auto\">\n            <div className=\"dropdown\">\n              <button \n                className=\"btn btn-sm btn-outline-secondary dropdown-toggle\" \n                type=\"button\" \n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <i className=\"bi bi-three-dots-vertical\"></i>\n              </button>\n              <ul className=\"dropdown-menu\">\n                <li>\n                  <a \n                    className=\"dropdown-item\" \n                    href={`/trader/chart/${crypto.symbol}`}\n                  >\n                    <i className=\"bi bi-graph-up me-2\"></i>График\n                  </a>\n                </li>\n                <li>\n                  <button \n                    className=\"dropdown-item\" \n                    onClick={() => onAddToWatchlist(crypto.symbol)}\n                  >\n                    <i className=\"bi bi-star me-2\"></i>В избранное\n                  </button>\n                </li>\n                <li>\n                  <button \n                    className=\"dropdown-item\" \n                    onClick={() => onSetAlert(crypto)}\n                  >\n                    <i className=\"bi bi-bell me-2\"></i>Установить алерт\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"card-footer bg-transparent border-0 pt-0\">\n        <div className=\"progress\" style={{ height: '3px' }}>\n          <div \n            className={`progress-bar ${isPositive ? 'bg-success' : 'bg-danger'}`}\n            style={{ \n              width: `${Math.min(Math.abs(crypto.change) * 10, 100)}%` \n            }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoCard;\n","import React, { useState, useMemo } from 'react';\n\nconst MarketTable = ({ data, onAddToWatchlist, onSetAlert, loading }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n  const [filter, setFilter] = useState('all');\n\n  const getCryptoIcon = (symbol) => {\n    if (symbol.includes('BTC')) return 'bi-currency-bitcoin text-warning';\n    if (symbol.includes('ETH')) return 'bi-ethereum text-info';\n    return 'bi-coin text-secondary';\n  };\n\n  const getCryptoName = (symbol) => {\n    if (symbol.includes('BTC')) return 'Bitcoin';\n    if (symbol.includes('ETH')) return 'Ethereum';\n    if (symbol.includes('BNB')) return 'Binance Coin';\n    if (symbol.includes('ADA')) return 'Cardano';\n    if (symbol.includes('SOL')) return 'Solana';\n    return symbol.split('-')[0];\n  };\n\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 4 : 2\n    }).format(price);\n  };\n\n  const formatVolume = (volume) => {\n    return new Intl.NumberFormat('en-US').format(Math.round(volume));\n  };\n\n  const formatChange = (change) => {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${change.toFixed(2)}%`;\n  };\n\n  // Filter and search data\n  const filteredData = useMemo(() => {\n    let filtered = data;\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(item =>\n        item.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        getCryptoName(item.symbol).toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Apply change filter\n    if (filter === 'up') {\n      filtered = filtered.filter(item => item.change >= 0);\n    } else if (filter === 'down') {\n      filtered = filtered.filter(item => item.change < 0);\n    }\n\n    return filtered;\n  }, [data, searchTerm, filter]);\n\n  // Sort data\n  const sortedData = useMemo(() => {\n    if (!sortConfig.key) return filteredData;\n\n    return [...filteredData].sort((a, b) => {\n      let aValue = a[sortConfig.key];\n      let bValue = b[sortConfig.key];\n\n      // Handle string sorting for symbol\n      if (sortConfig.key === 'symbol') {\n        aValue = aValue.toLowerCase();\n        bValue = bValue.toLowerCase();\n      }\n\n      if (aValue < bValue) {\n        return sortConfig.direction === 'asc' ? -1 : 1;\n      }\n      if (aValue > bValue) {\n        return sortConfig.direction === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n  }, [filteredData, sortConfig]);\n\n  const handleSort = (key) => {\n    setSortConfig(prevConfig => ({\n      key,\n      direction: prevConfig.key === key && prevConfig.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) {\n      return 'bi-arrow-up-down';\n    }\n    return sortConfig.direction === 'asc' ? 'bi-arrow-up' : 'bi-arrow-down';\n  };\n\n  return (\n    <div className=\"card shadow-sm border-0 market-table-container\">\n      <div className=\"card-header bg-white border-0 py-3\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-6\">\n            <h5 className=\"mb-0\">\n              <i className=\"bi bi-table text-primary me-2\"></i>\n              Детальная информация о рынке\n            </h5>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"d-flex align-items-center justify-content-md-end\">\n              {/* Search */}\n              <div className=\"input-group input-group-sm me-3\" style={{ width: '250px' }}>\n                <span className=\"input-group-text bg-light border-end-0\">\n                  <i className=\"bi bi-search\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control border-start-0\"\n                  placeholder=\"Поиск криптовалюты...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </div>\n\n              {/* Filters */}\n              <div className=\"dropdown me-2\">\n                <button\n                  className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n                  type=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                >\n                  <i className=\"bi bi-funnel\"></i> Фильтр\n                </button>\n                <ul className=\"dropdown-menu\">\n                  <li>\n                    <button\n                      className=\"dropdown-item\"\n                      onClick={() => setFilter('all')}\n                    >\n                      <i className=\"bi bi-list me-2\"></i>Все\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className=\"dropdown-item\"\n                      onClick={() => setFilter('up')}\n                    >\n                      <i className=\"bi bi-arrow-up text-success me-2\"></i>Растущие\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className=\"dropdown-item\"\n                      onClick={() => setFilter('down')}\n                    >\n                      <i className=\"bi bi-arrow-down text-danger me-2\"></i>Падающие\n                    </button>\n                  </li>\n                </ul>\n              </div>\n\n              {/* Export */}\n              <button className=\"btn btn-sm btn-outline-secondary\">\n                <i className=\"bi bi-download\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card-body p-0\">\n        {loading && (\n          <div className=\"loading-overlay\">\n            <div className=\"loading-spinner\"></div>\n          </div>\n        )}\n\n        <div className=\"table-responsive\">\n          <table className=\"table table-hover mb-0 market-table\">\n            <thead className=\"bg-light\">\n              <tr>\n                <th className=\"border-0 px-4 py-3\">\n                  <div\n                    className=\"sortable-header\"\n                    onClick={() => handleSort('symbol')}\n                  >\n                    Криптовалюта\n                    <i className={`bi ${getSortIcon('symbol')} sort-icon`}></i>\n                  </div>\n                </th>\n                <th className=\"border-0 px-4 py-3 text-end\">\n                  <div\n                    className=\"sortable-header justify-content-end\"\n                    onClick={() => handleSort('price')}\n                  >\n                    Цена\n                    <i className={`bi ${getSortIcon('price')} sort-icon`}></i>\n                  </div>\n                </th>\n                <th className=\"border-0 px-4 py-3 text-end\">\n                  <div\n                    className=\"sortable-header justify-content-end\"\n                    onClick={() => handleSort('change')}\n                  >\n                    Изменение 24ч\n                    <i className={`bi ${getSortIcon('change')} sort-icon`}></i>\n                  </div>\n                </th>\n                <th className=\"border-0 px-4 py-3 text-end\">Максимум 24ч</th>\n                <th className=\"border-0 px-4 py-3 text-end\">Минимум 24ч</th>\n                <th className=\"border-0 px-4 py-3 text-end\">\n                  <div\n                    className=\"sortable-header justify-content-end\"\n                    onClick={() => handleSort('volume')}\n                  >\n                    Объём\n                    <i className={`bi ${getSortIcon('volume')} sort-icon`}></i>\n                  </div>\n                </th>\n                <th className=\"border-0 px-4 py-3 text-center\">Действия</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedData.map((crypto) => {\n                const isPositive = crypto.change >= 0;\n                return (\n                  <tr key={crypto.symbol} className=\"market-row\">\n                    <td className=\"px-4 py-3\">\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"crypto-icon me-3\">\n                          <i className={`bi ${getCryptoIcon(crypto.symbol)} fs-4`}></i>\n                        </div>\n                        <div>\n                          <div className=\"fw-bold\">\n                            {crypto.symbol.replace('-', ' / ')}\n                          </div>\n                          <small className=\"text-muted\">\n                            {getCryptoName(crypto.symbol)}\n                          </small>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3 text-end\">\n                      <span className=\"fw-bold\">{formatPrice(crypto.price)}</span>\n                    </td>\n                    <td className=\"px-4 py-3 text-end\">\n                      <div className=\"d-flex align-items-center justify-content-end\">\n                        <span\n                          className={`badge ${\n                            isPositive\n                              ? 'bg-success bg-opacity-10 text-success'\n                              : 'bg-danger bg-opacity-10 text-danger'\n                          } px-2 py-1 me-2`}\n                        >\n                          <i\n                            className={`bi bi-triangle-fill me-1`}\n                            style={{\n                              transform: isPositive ? 'rotate(0deg)' : 'rotate(180deg)',\n                              fontSize: '0.6rem'\n                            }}\n                          ></i>\n                          {formatChange(crypto.change)}\n                        </span>\n                        <div className=\"progress\" style={{ width: '40px', height: '4px' }}>\n                          <div\n                            className={`progress-bar ${\n                              isPositive ? 'bg-success' : 'bg-danger'\n                            }`}\n                            style={{\n                              width: `${Math.min(Math.abs(crypto.change) * 5, 100)}%`\n                            }}\n                          ></div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3 text-end text-muted\">\n                      {formatPrice(crypto.high)}\n                    </td>\n                    <td className=\"px-4 py-3 text-end text-muted\">\n                      {formatPrice(crypto.low)}\n                    </td>\n                    <td className=\"px-4 py-3 text-end\">\n                      <span className=\"text-muted\">{formatVolume(crypto.volume)}</span>\n                    </td>\n                    <td className=\"px-4 py-3 text-center\">\n                      <div className=\"btn-group btn-group-sm\" role=\"group\">\n                        <a\n                          href={`/trader/chart/${crypto.symbol}`}\n                          className=\"btn btn-outline-primary btn-sm\"\n                          title=\"График\"\n                        >\n                          <i className=\"bi bi-graph-up\"></i>\n                        </a>\n                        <button\n                          className=\"btn btn-outline-secondary btn-sm\"\n                          onClick={() => onAddToWatchlist(crypto.symbol)}\n                          title=\"В избранное\"\n                        >\n                          <i className=\"bi bi-star\"></i>\n                        </button>\n                        <button\n                          className=\"btn btn-outline-warning btn-sm\"\n                          onClick={() => onSetAlert(crypto)}\n                          title=\"Алерт\"\n                        >\n                          <i className=\"bi bi-bell\"></i>\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"card-footer bg-white border-0\">\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"text-muted small\">\n            Показано {sortedData.length} из {data.length} записей\n          </div>\n          <nav>\n            <ul className=\"pagination pagination-sm mb-0\">\n              <li className=\"page-item disabled\">\n                <span className=\"page-link\">Предыдущая</span>\n              </li>\n              <li className=\"page-item active\">\n                <span className=\"page-link\">1</span>\n              </li>\n              <li className=\"page-item disabled\">\n                <span className=\"page-link\">Следующая</span>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketTable;\n","import React, { useState, useEffect } from 'react';\n\nconst AlertModal = ({ crypto, onClose, onCreateAlert }) => {\n  const [condition, setCondition] = useState('>');\n  const [targetPrice, setTargetPrice] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Set initial target price based on current price\n    if (crypto && crypto.price) {\n      const suggestedPrice = condition === '>' \n        ? (crypto.price * 1.05).toFixed(2)\n        : (crypto.price * 0.95).toFixed(2);\n      setTargetPrice(suggestedPrice);\n    }\n  }, [crypto, condition]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!targetPrice || isNaN(targetPrice)) {\n      alert('Пожалуйста, укажите корректную целевую цену');\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      await onCreateAlert({\n        condition,\n        target_price: parseFloat(targetPrice)\n      });\n    } catch (error) {\n      console.error('Error creating alert:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 4 : 2\n    }).format(price);\n  };\n\n  return (\n    <div className=\"modal fade show alert-modal\" style={{ display: 'block' }} tabIndex=\"-1\">\n      <div className=\"modal-backdrop fade show\" onClick={onClose}></div>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              <i className=\"bi bi-bell me-2\"></i>\n              Установить ценовой алерт\n            </h5>\n            <button \n              type=\"button\" \n              className=\"btn-close\" \n              onClick={onClose}\n              disabled={loading}\n            ></button>\n          </div>\n          \n          <form onSubmit={handleSubmit}>\n            <div className=\"modal-body\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Криптовалюта</label>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <i className=\"bi bi-coin\"></i>\n                  </span>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={crypto.symbol}\n                    readOnly\n                  />\n                </div>\n                <div className=\"form-text\">\n                  Текущая цена: <strong>{formatPrice(crypto.price)}</strong>\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Условие</label>\n                <select\n                  className=\"form-select\"\n                  value={condition}\n                  onChange={(e) => setCondition(e.target.value)}\n                  disabled={loading}\n                >\n                  <option value=\">\">Цена выше</option>\n                  <option value=\"<\">Цена ниже</option>\n                </select>\n              </div>\n\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Целевая цена ($)</label>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">$</span>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={targetPrice}\n                    onChange={(e) => setTargetPrice(e.target.value)}\n                    step=\"0.01\"\n                    min=\"0\"\n                    required\n                    disabled={loading}\n                    placeholder=\"Введите целевую цену\"\n                  />\n                </div>\n                <div className=\"form-text\">\n                  {condition === '>' ? 'Алерт сработает когда цена поднимется выше' : 'Алерт сработает когда цена опустится ниже'} ${targetPrice || '0.00'}\n                </div>\n              </div>\n\n              {/* Price suggestion buttons */}\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Быстрый выбор:</label>\n                <div className=\"btn-group w-100\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={() => setTargetPrice((crypto.price * 0.95).toFixed(2))}\n                    disabled={loading}\n                  >\n                    -5%\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={() => setTargetPrice((crypto.price * 0.90).toFixed(2))}\n                    disabled={loading}\n                  >\n                    -10%\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={() => setTargetPrice(crypto.price.toFixed(2))}\n                    disabled={loading}\n                  >\n                    Текущая\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={() => setTargetPrice((crypto.price * 1.05).toFixed(2))}\n                    disabled={loading}\n                  >\n                    +5%\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={() => setTargetPrice((crypto.price * 1.10).toFixed(2))}\n                    disabled={loading}\n                  >\n                    +10%\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={onClose}\n                disabled={loading}\n              >\n                Отмена\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={loading || !targetPrice}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"loading-spinner me-2\"></span>\n                    Создание...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-bell me-2\"></i>\n                    Создать алерт\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AlertModal;\n","import React, { useState, useEffect } from 'react';\n\nconst NotificationContainer = () => {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    if (!window.CryptoApp?.notifications) return;\n\n    const handleNotificationEvent = (event, data) => {\n      switch (event) {\n        case 'add':\n          setNotifications(prev => [data, ...prev.slice(0, 4)]); // Keep only 5 latest\n          break;\n        case 'remove':\n          setNotifications(prev => prev.filter(n => n.id !== data.id));\n          break;\n        case 'clear':\n          setNotifications([]);\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.CryptoApp.notifications.addListener(handleNotificationEvent);\n\n    // Load existing notifications\n    const existing = window.CryptoApp.notifications.getAll().slice(0, 5);\n    setNotifications(existing);\n\n    return () => {\n      window.CryptoApp.notifications.removeListener(handleNotificationEvent);\n    };\n  }, []);\n\n  const handleClose = (id) => {\n    window.CryptoApp.notifications.remove(id);\n  };\n\n  const handleAction = (action) => {\n    if (window.CryptoApp.notifications.executeAction) {\n      window.CryptoApp.notifications.executeAction(action);\n    }\n  };\n\n  if (notifications.length === 0) return null;\n\n  return (\n    <div className=\"notification-container\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`notification ${notification.type || 'info'}`}\n        >\n          <div className=\"notification-header\">\n            <h6 className=\"notification-title\">\n              {notification.icon && (\n                <i className={`bi ${notification.icon} me-2`}></i>\n              )}\n              {notification.title}\n            </h6>\n            <button\n              className=\"notification-close\"\n              onClick={() => handleClose(notification.id)}\n            >\n              <i className=\"bi bi-x\"></i>\n            </button>\n          </div>\n          \n          <div className=\"notification-body\">\n            {notification.message}\n          </div>\n\n          {notification.actions && notification.actions.length > 0 && (\n            <div className=\"notification-actions\">\n              {notification.actions.map((action, index) => (\n                <button\n                  key={index}\n                  className=\"notification-action\"\n                  onClick={() => handleAction(action)}\n                >\n                  {action.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NotificationContainer;\n","import React, { useState, useEffect } from 'react';\n\nconst ConnectionStatus = () => {\n  const [connectionStatus, setConnectionStatus] = useState({\n    isConnected: false,\n    reconnectAttempts: 0,\n    lastUpdate: null\n  });\n\n  useEffect(() => {\n    const updateConnectionStatus = () => {\n      if (window.CryptoApp?.ws) {\n        const status = window.CryptoApp.ws.getConnectionStatus();\n        setConnectionStatus({\n          ...status,\n          lastUpdate: new Date()\n        });\n      }\n    };\n\n    // Initial status check\n    updateConnectionStatus();\n\n    // Setup WebSocket event listeners\n    if (window.CryptoApp?.ws) {\n      const handleConnection = (data) => {\n        updateConnectionStatus();\n      };\n\n      window.CryptoApp.ws.on('connection', handleConnection);\n      window.CryptoApp.ws.on('connected', handleConnection);\n      window.CryptoApp.ws.on('market_data_update', () => {\n        setConnectionStatus(prev => ({\n          ...prev,\n          lastUpdate: new Date()\n        }));\n      });\n\n      return () => {\n        window.CryptoApp.ws.off('connection', handleConnection);\n        window.CryptoApp.ws.off('connected', handleConnection);\n      };\n    }\n\n    // Fallback: check connection status every 5 seconds\n    const interval = setInterval(updateConnectionStatus, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusColor = () => {\n    if (connectionStatus.isConnected) {\n      return 'success';\n    } else if (connectionStatus.reconnectAttempts > 0) {\n      return 'warning';\n    } else {\n      return 'danger';\n    }\n  };\n\n  const getStatusText = () => {\n    if (connectionStatus.isConnected) {\n      return 'Подключено';\n    } else if (connectionStatus.reconnectAttempts > 0) {\n      return `Переподключение... (${connectionStatus.reconnectAttempts})`;\n    } else {\n      return 'Отключено';\n    }\n  };\n\n  const getStatusIcon = () => {\n    if (connectionStatus.isConnected) {\n      return 'bi-wifi';\n    } else if (connectionStatus.reconnectAttempts > 0) {\n      return 'bi-arrow-clockwise';\n    } else {\n      return 'bi-wifi-off';\n    }\n  };\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <span className={`badge bg-${getStatusColor()} me-2`}>\n        <i className={`bi ${getStatusIcon()} me-1`}></i>\n        Real-time: {getStatusText()}\n      </span>\n      {connectionStatus.lastUpdate && (\n        <small className=\"text-muted\">\n          Обновлено: {connectionStatus.lastUpdate.toLocaleTimeString()}\n        </small>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n","import React, { useState, useEffect } from 'react';\nimport CryptoCard from './CryptoCard';\nimport MarketTable from './MarketTable';\nimport AlertModal from './AlertModal';\nimport NotificationContainer from '../Common/NotificationContainer';\nimport ConnectionStatus from '../Common/ConnectionStatus';\n\nconst DashboardApp = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAlertModal, setShowAlertModal] = useState(false);\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [connectionError, setConnectionError] = useState(null);\n\n  // Handle WebSocket connection and subscriptions\n  useEffect(() => {\n    loadCryptoData();\n    \n    // Setup WebSocket for real-time updates\n    if (window.CryptoApp?.ws) {\n      // Set up event listeners\n      window.CryptoApp.ws.on('market_data_update', handleMarketDataUpdate);\n      window.CryptoApp.ws.on('market_error', handleMarketError);\n      window.CryptoApp.ws.on('connection', (data) => {\n        setConnectionStatus(data.status);\n        if (data.status === 'error') {\n          setConnectionError(data.error || 'Connection error');\n        } else {\n          setConnectionError(null);\n        }\n        handleConnectionChange(data);\n      });\n      \n      // Subscribe to market data\n      window.CryptoApp.ws.subscribeToMarketData();\n      \n      // Connect WebSocket if not already connected\n      if (!window.CryptoApp.ws.isConnected()) {\n        console.log('Connecting to WebSocket...');\n        window.CryptoApp.ws.connect();\n      }\n    } else {\n      console.error('WebSocket service not available');\n      setConnectionStatus('error');\n      setConnectionError('WebSocket service not initialized');\n    }\n\n    // Auto-refresh every 60 seconds as fallback (reduced frequency due to WebSocket)\n    const interval = setInterval(loadCryptoData, 60000);\n\n    return () => {\n      clearInterval(interval);\n      if (window.CryptoApp?.ws) {\n        window.CryptoApp.ws.off('market_data_update', handleMarketDataUpdate);\n        window.CryptoApp.ws.off('market_error', handleMarketError);\n        window.CryptoApp.ws.off('connection', handleConnectionChange);\n      }\n    };\n  }, []);\n\n  const loadCryptoData = async () => {\n    try {\n      setError(null);\n      const data = await window.CryptoApp.api.getMarketData();\n      setCryptoData(data);\n      setLastUpdate(new Date());\n    } catch (err) {\n      setError('Ошибка загрузки данных рынка');\n      console.error('Error loading crypto data:', err);\n      \n      // Show error notification\n      if (window.CryptoApp?.notifications) {\n        window.CryptoApp.notifications.error('Не удалось загрузить данные рынка');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMarketDataUpdate = (data) => {\n    console.log('📊 Dashboard received market data update:', data.data?.length || 0, 'symbols');\n    if (data.data && Array.isArray(data.data)) {\n      setCryptoData(data.data);\n      setLastUpdate(new Date());\n      setError(null); // Clear any previous errors\n      \n      // Show success notification for real-time update\n      if (window.CryptoApp?.notifications) {\n        window.CryptoApp.notifications.info('Данные рынка обновлены в реальном времени');\n      }\n    }\n  };\n\n  const handleMarketError = (data) => {\n    console.error('❌ Market data error received:', data.error);\n    const errorMsg = data.error || 'Unknown error';\n    setError('Ошибка получения данных рынка: ' + errorMsg);\n    setConnectionStatus('error');\n    setConnectionError(errorMsg);\n    \n    if (window.CryptoApp?.notifications) {\n      window.CryptoApp.notifications.error('Ошибка обновления данных рынка: ' + errorMsg);\n    }\n  };\n  \n  // Manual refresh function\n  const handleManualRefresh = async () => {\n    setLoading(true);\n    setError(null);\n    await loadCryptoData();\n    \n    // Try to reconnect WebSocket if not connected\n    if (window.CryptoApp?.ws && !window.CryptoApp.ws.isConnected()) {\n      window.CryptoApp.ws.connect();\n    }\n  };\n\n  const handleConnectionChange = (data) => {\n    console.log('🔌 WebSocket connection status:', data.status);\n    \n    if (data.status === 'connected') {\n      if (window.CryptoApp?.notifications) {\n        window.CryptoApp.notifications.success('Подключение к real-time данным установлено');\n      }\n    } else if (data.status === 'disconnected') {\n      if (window.CryptoApp?.notifications) {\n        window.CryptoApp.notifications.warning('Соединение с real-time данными потеряно');\n      }\n    } else if (data.status === 'error') {\n      if (window.CryptoApp?.notifications) {\n        window.CryptoApp.notifications.error('Ошибка подключения к real-time данным');\n      }\n    }\n  };\n\n  const handleMarketUpdate = (data) => {\n    // Legacy handler for backward compatibility\n    setCryptoData(prevData => {\n      return prevData.map(crypto => {\n        const update = data.find(item => item.symbol === crypto.symbol);\n        return update ? { ...crypto, ...update } : crypto;\n      });\n    });\n    setLastUpdate(new Date());\n  };\n\n  const handleRefresh = () => {\n    setLoading(true);\n    loadCryptoData();\n  };\n\n  const handleAddToWatchlist = async (symbol) => {\n    try {\n      await window.CryptoApp.api.addToWatchlist(symbol);\n      window.CryptoApp.notifications.success(`${symbol} добавлен в избранное`);\n    } catch (err) {\n      window.CryptoApp.notifications.error('Ошибка добавления в избранное');\n    }\n  };\n\n  const handleSetAlert = (crypto) => {\n    setSelectedCrypto(crypto);\n    setShowAlertModal(true);\n  };\n\n  const handleCreateAlert = async (alertData) => {\n    try {\n      await window.CryptoApp.api.createAlert({\n        symbol: selectedCrypto.symbol,\n        ...alertData\n      });\n      \n      window.CryptoApp.notifications.success(\n        `Алерт создан для ${selectedCrypto.symbol}`,\n        { title: 'Алерт создан' }\n      );\n      \n      setShowAlertModal(false);\n      setSelectedCrypto(null);\n    } catch (err) {\n      window.CryptoApp.notifications.error('Ошибка создания алерта');\n    }\n  };\n\n  const formatLastUpdate = (date) => {\n    return new Date(date).toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  if (loading && cryptoData.length === 0) {\n    return (\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '400px' }}>\n        <div className=\"text-center\">\n          <div className=\"loading-spinner mb-3\"></div>\n          <p className=\"text-muted\">Загрузка данных рынка...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && cryptoData.length === 0) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <h4 className=\"alert-heading\">Ошибка загрузки</h4>\n        <p>{error}</p>\n        <button className=\"btn btn-outline-danger\" onClick={handleRefresh}>\n          <i className=\"bi bi-arrow-clockwise me-2\"></i>\n          Попробовать снова\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"react-component\">\n      {/* Header with refresh button */}\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 className=\"h3 mb-0 text-gray-800\">\n            <i className=\"bi bi-graph-up-arrow text-primary\"></i>\n            Панель трейдера\n          </h1>\n          <p className=\"text-muted mb-0\">Мониторинг криптовалютного рынка в реальном времени</p>\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <ConnectionStatus />\n          <div className=\"me-3 ms-3\">\n            <small className=\"text-muted\">Последнее обновление:</small>\n            <div className=\"fw-bold text-success\">\n              {lastUpdate.toLocaleTimeString()}\n            </div>\n          </div>\n          <button \n            className=\"btn btn-outline-primary btn-sm me-2\" \n            onClick={handleRefresh}\n            disabled={loading}\n          >\n            <i className={`bi bi-arrow-clockwise ${loading ? 'loading-spinner' : ''}`}></i>\n            {loading ? ' Обновление...' : ' Обновить'}\n          </button>\n          <span className=\"badge bg-success\">\n            <i className=\"bi bi-circle-fill blink\"></i> Live\n          </span>\n        </div>\n      </div>\n\n      {/* Crypto Cards Grid */}\n      <div className=\"row mb-4\">\n        {cryptoData.slice(0, 4).map(crypto => (\n          <div key={crypto.symbol} className=\"col-xl-3 col-md-6 mb-4\">\n            <CryptoCard\n              crypto={crypto}\n              onAddToWatchlist={handleAddToWatchlist}\n              onSetAlert={handleSetAlert}\n            />\n          </div>\n        ))}\n      </div>\n\n      {/* Market Data Table */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <MarketTable\n            data={cryptoData}\n            onAddToWatchlist={handleAddToWatchlist}\n            onSetAlert={handleSetAlert}\n            loading={loading}\n          />\n        </div>\n      </div>\n\n      {/* Alert Modal */}\n      {showAlertModal && selectedCrypto && (\n        <AlertModal\n          crypto={selectedCrypto}\n          onClose={() => {\n            setShowAlertModal(false);\n            setSelectedCrypto(null);\n          }}\n          onCreateAlert={handleCreateAlert}\n        />\n      )}\n\n      {/* Notification Container */}\n      <NotificationContainer />\n    </div>\n  );\n};\n\nexport default DashboardApp;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport DashboardApp from './DashboardApp';\n\nconst container = document.getElementById('react-dashboard');\n\nif (container) {\n  const root = createRoot(container);\n  root.render(\n    <React.StrictMode>\n      <DashboardApp />\n    </React.StrictMode>\n  );\n} else {\n  console.error('Failed to find the root element for the React dashboard.');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 945;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t945: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcrypto_analysis_system\"] = self[\"webpackChunkcrypto_analysis_system\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], function() { return __webpack_require__(8984); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","CryptoCard","crypto","onAddToWatchlist","onSetAlert","isPositive","change","changeClass","cardClass","formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","React","className","symbol","includes","replace","split","getCryptoName","toFixed","high","low","type","href","onClick","height","width","Math","min","abs","MarketTable","data","loading","searchTerm","setSearchTerm","useState","sortConfig","setSortConfig","key","direction","filter","setFilter","filteredData","useMemo","filtered","item","toLowerCase","sortedData","sort","a","b","aValue","bValue","handleSort","prevConfig","getSortIcon","placeholder","value","onChange","e","target","map","transform","fontSize","volume","round","role","title","length","AlertModal","onClose","onCreateAlert","condition","setCondition","targetPrice","setTargetPrice","setLoading","useEffect","suggestedPrice","display","tabIndex","disabled","onSubmit","async","preventDefault","isNaN","target_price","parseFloat","error","console","alert","readOnly","step","required","NotificationContainer","notifications","setNotifications","window","CryptoApp","handleNotificationEvent","event","prev","slice","n","id","addListener","existing","getAll","removeListener","notification","icon","handleClose","remove","message","actions","action","index","executeAction","handleAction","label","ConnectionStatus","connectionStatus","setConnectionStatus","isConnected","reconnectAttempts","lastUpdate","updateConnectionStatus","ws","status","getConnectionStatus","Date","handleConnection","on","off","interval","setInterval","clearInterval","toLocaleTimeString","DashboardApp","cryptoData","setCryptoData","setError","showAlertModal","setShowAlertModal","selectedCrypto","setSelectedCrypto","setLastUpdate","connectionError","setConnectionError","loadCryptoData","handleMarketDataUpdate","handleMarketError","handleConnectionChange","subscribeToMarketData","log","connect","api","getMarketData","err","Array","isArray","info","errorMsg","success","warning","handleRefresh","handleAddToWatchlist","addToWatchlist","handleSetAlert","minHeight","createAlert","alertData","container","document","getElementById","createRoot","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","baseURI","self","location","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","forEach","bind","push","nc","__webpack_exports__"],"sourceRoot":""}