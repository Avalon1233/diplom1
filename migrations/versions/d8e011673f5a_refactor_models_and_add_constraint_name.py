"""Refactor models and add constraint name

Revision ID: d8e011673f5a
Revises: b9c01cf59226
Create Date: 2025-09-24 05:31:08.877574

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd8e011673f5a'
down_revision = 'b9c01cf59226'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crypto_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cryptocurrency_id', sa.Integer(), nullable=False))
        batch_op.drop_index(batch_op.f('ix_crypto_data_symbol_timeframe_timestamp'))
        batch_op.drop_constraint(batch_op.f('uq_crypto_data_unique_candle'), type_='unique')
        batch_op.create_unique_constraint('uq_crypto_data_unique_candle', ['cryptocurrency_id', 'exchange', 'timeframe', 'timestamp'])
        batch_op.create_foreign_key('fk_crypto_data_cryptocurrency', 'cryptocurrencies', ['cryptocurrency_id'], ['id'])

    with op.batch_alter_table('price_alerts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cryptocurrency_id', sa.Integer(), nullable=False))
        batch_op.alter_column('condition',
               existing_type=sa.VARCHAR(length=2),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_price_alerts_active_symbol'))
        batch_op.create_index(batch_op.f('ix_price_alerts_is_active'), ['is_active'], unique=False)
        batch_op.create_foreign_key('fk_price_alerts_cryptocurrency', 'cryptocurrencies', ['cryptocurrency_id'], ['id'])
        batch_op.drop_column('chat_id')
        batch_op.drop_column('current_price')

    with op.batch_alter_table('user_watchlist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cryptocurrency_id', sa.Integer(), nullable=False))
        batch_op.drop_index(batch_op.f('idx_user_watchlist_user_id'))
        batch_op.drop_constraint(batch_op.f('unique_user_coin'), type_='unique')
        batch_op.create_foreign_key('fk_user_watchlist_cryptocurrency', 'cryptocurrencies', ['cryptocurrency_id'], ['id'])
        batch_op.drop_column('coin_id')
        batch_op.drop_column('id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_watchlist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('coin_id', sa.VARCHAR(length=100), nullable=False))
        batch_op.drop_constraint('fk_user_watchlist_cryptocurrency', type_='foreignkey')
        batch_op.create_unique_constraint(batch_op.f('unique_user_coin'), ['user_id', 'coin_id'])
        batch_op.create_index(batch_op.f('idx_user_watchlist_user_id'), ['user_id'], unique=False)
        batch_op.drop_column('cryptocurrency_id')

    with op.batch_alter_table('price_alerts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_price', sa.NUMERIC(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('chat_id', sa.VARCHAR(length=32), nullable=False))
        batch_op.drop_constraint('fk_price_alerts_cryptocurrency', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_price_alerts_is_active'))
        batch_op.create_index(batch_op.f('ix_price_alerts_active_symbol'), ['is_active', 'symbol'], unique=False)
        batch_op.alter_column('condition',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=2),
               existing_nullable=False)
        batch_op.drop_column('cryptocurrency_id')

    with op.batch_alter_table('crypto_data', schema=None) as batch_op:
        batch_op.drop_constraint('fk_crypto_data_cryptocurrency', type_='foreignkey')
        batch_op.drop_constraint('uq_crypto_data_unique_candle', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_crypto_data_unique_candle'), ['symbol', 'exchange', 'timeframe', 'timestamp'])
        batch_op.create_index(batch_op.f('ix_crypto_data_symbol_timeframe_timestamp'), ['symbol', 'timeframe', 'timestamp'], unique=False)
        batch_op.drop_column('cryptocurrency_id')

    # ### end Alembic commands ###
